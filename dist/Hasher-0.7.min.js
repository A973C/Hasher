/*
 * Hasher
 * - History Manager for rich-media applications.
 * Includes: MM.EventDispatcher (0.7.2), MM.queryUtils (0.5)
 * @author Miller Medeiros <http://www.millermedeiros.com/>
 * @version 0.7 (2010/06/21)
 * Released under the MIT License <http://www.opensource.org/licenses/mit-license.php>
 */
var MM=MM||{};MM.EventDispatcher=function(){this._handlers={}};MM.EventDispatcher.prototype={addEventListener:function(a,b){if(typeof this._handlers[a]=="undefined"){this._handlers[a]=[]}this._handlers[a].push(b)},removeEventListener:function(b,c){if(!this.hasEventListener(b)){return}var a=this._handlers[b],d=a.length;if(d==1){delete this._handlers[b]}else{while(d--){if(a[d]==c){a.splice(d,1);break}}}},removeAllEventListeners:function(){this._handlers={}},hasEventListener:function(a){return(typeof this._handlers[a]!="undefined")},dispatchEvent:function(d){d=(typeof d=="string")?{type:d}:d;if(this.hasEventListener(d.type)){var a=this._handlers[d.type],c,b,f=a.length;d.target=d.target||this;for(b=0;b<f;b++){c=a[b];c(d)}}}};var MM=MM||{};MM.queryUtils={getQueryString:function(a){a=a||location.href;a=a.replace(/#.*/,"");var b=/\?[a-zA-Z0-9\=\&\%\$\-\_\.\+\!\*\'\(\)\,]+/.exec(a);return(b)?decodeURIComponent(b[0]):""},getQueryObject:function(){return this.toQueryObject(this.getQueryString())},toQueryObject:function(d){var a=d.replace("?","").split("&"),c=a.length,b={};while(c--){a[c]=a[c].split("=");b[a[c][0]]=a[c][1]}return b},getParamValue:function(c,a){var b=(a)?this.toQueryObject(a):this.getQueryObject();return b[c]},hasParam:function(c,a){var b=new RegExp("(?|&)"+c+"=","g");return b.test(this.getQueryString(a))},toQueryString:function(b){var a=[],c;for(c in b){a.push(c+"="+b[c])}return(a.length)?"?"+a.join("&"):""}};(function(h,j,c){var f,l,e,d=/msie (6|7)/.test(navigator.userAgent.toLowerCase())&&!+"\v1";this.Hasher=new MM.EventDispatcher();Hasher.init=function(){var m=this.getHash();if(d){if(!e){a();b()}l=setInterval(i,25)}else{l=setInterval(k,25)}this.dispatchEvent(new HasherEvent(HasherEvent.INIT,f,m));f=m};Hasher.stop=function(){clearInterval(l);l=null;this.dispatchEvent(new HasherEvent(HasherEvent.STOP,f,f))};Hasher.setHash=function(m){location.hash=m};Hasher.getHash=function(){return location.hash.substr(1)};Hasher.getHashAsArray=function(o){o=o||"/";var n=this.getHash(),m=new RegExp("^\\"+o+"|\\"+o+"$","g");n=n.replace(m,"");return n.split(o)};Hasher.getURL=function(){return location.href};Hasher.getBaseURL=function(){return location.href.replace(/(\?.*)|(\#.*)/,"")};Hasher.setTitle=function(m){j.title=m};Hasher.getTitle=function(){return j.title};Hasher.back=function(){history.back()};Hasher.forward=function(){history.forward()};Hasher.go=function(m){history.go(m)};Hasher.getHashQueryString=function(){return MM.queryUtils.getQueryString(this.getHash())};Hasher.getHashQueryObject=function(){return MM.queryUtils.toQueryObject(this.getHashQueryString())};function g(m){Hasher.dispatchEvent(new HasherEvent(HasherEvent.CHANGE,f,m));f=m}function k(){var m=Hasher.getHash();if(m!=f){g(m)}}function i(){var n=Hasher.getHash(),m=e.contentWindow.frameHash;if(m!=n&&m!=f){Hasher.setHash(m);g(m)}else{if(n!=f){if(m!=n){b()}g(n)}}}function a(){e=j.createElement("iframe");e.src="javascript:false";e.style.display="none";j.body.appendChild(e)}function b(){var m=e.contentWindow.document;m.open();m.write("<html><head><title>"+Hasher.getTitle()+'</title><script type="text/javascript">var frameHash="'+Hasher.getHash()+'";<\/script></head><body>&nbsp;</body></html>');m.close()}})(window,document);var HasherEvent=function(a,c,b){this.type=a;this.oldHash=c;this.newHash=b};HasherEvent.prototype.toString=function(){return'[HasherEvent type="'+this.type+'" oldHash="'+this.oldHash+'" newHash="'+this.newHash+'"]'};HasherEvent.CHANGE="change";HasherEvent.INIT="init";HasherEvent.STOP="stop";